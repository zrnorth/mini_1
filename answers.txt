Name: Zach North
UCLA ID: 603885768

Collaborators: none

-------------------------------------------------------------------------------

Response to Exercise 1:

The pid returned would possibly not be correct. The way we return the pid value is by
placing it in the eax register; if we then schedule a new process, it may
overwrite the eax register. When we finally get around to the current process
again, it will return whatever is in eax, which may be something completely
different. WeensyOS does not save register values, so the value of eax will be
garbage.



Anything else you'd like us to know:

The way I implemented part 3 was to add a variable to the process_t struct. If
a process is waiting on another to finish, I set it's status to P_BLOCKED so
the scheduler does not start it up again, and then set the process being
waited on's p_waiting integer to the waiting pid. Then when the process exits,
it sets the process waiting on it's status back to P_RUNNABLE (reawakening it)
so the scheduler will start it up again. Then when it starts it can reap the
child process and continue as normal.



Extra credit exercises:
